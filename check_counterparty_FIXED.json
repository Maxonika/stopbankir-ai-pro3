{
  "name": "LegalAI - check_counterparty - PRODUCTION_v5",
  "nodes": [
    {
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook"
    },
    {
      "name": "Determine Query Type",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Check Cache",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "IF Cache Hit",
      "type": "n8n-nodes-base.if"
    },
    {
      "name": "Dadata API Request",
      "type": "n8n-nodes-base.httpRequest"
    },
    {
      "name": "IF Dadata Success",
      "type": "n8n-nodes-base.if"
    },
    {
      "name": "Log Error Dadata",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Log Dadata Success",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Parse Dadata Response",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Fedresurs API Request",
      "type": "n8n-nodes-base.httpRequest"
    },
    {
      "name": "IF Fedresurs Success",
      "type": "n8n-nodes-base.if"
    },
    {
      "name": "Log Error Fedresurs",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Log Fedresurs Success",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Parse Fedresurs Response",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Wait Before KAD (Random)",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Rotate User-Agent",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "KAD GraphQL Request",
      "type": "n8n-nodes-base.httpRequest",
      "parameters": {
        "url": "https://kad.arbitr.ru/CardService/CardSearch",
        "method": "POST",
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json"
          },
          {
            "name": "User-Agent",
            "value": "={{$node[\"Rotate User-Agent\"].json.userAgent}}"
          }
        ],
        "bodyParametersJson": "{\n  \"query\": \"query SearchCards($SearchParams: CardSearchFilterInput) {\\n  searchCards(SearchParams: $SearchParams) {\\n    cards {\\n      caseNumber\\n      court { name }\\n      cardUrl\\n      subject\\n    }\\n  }\\n}\",\n  \"variables\": {\n    \"SearchParams\": {\n      \"Text\": \"{{$node[\\\"Determine Query Type\\\"]?.json.payload.query}}\",\n      \"Count\": 10\n    }\n  }\n}",
        "options": {
          "maxAttempts": 3,
          "retry": true,
          "retryDelay": 2000
        }
      }
    },
    {
      "name": "IF KAD Success",
      "type": "n8n-nodes-base.if"
    },
    {
      "name": "Log Error KAD",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Log KAD Success",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Parse KAD Response",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Calculate Risk Level",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Return Final JSON",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Update Cache",
      "type": "n8n-nodes-base.function"
    },
    {
      "name": "Log Final Response",
      "type": "n8n-nodes-base.function"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Determine Query Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determine Query Type": {
      "main": [
        [
          {
            "node": "Check Cache",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Cache": {
      "main": [
        [
          {
            "node": "IF Cache Hit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Cache Hit": {
      "main": [
        [
          {
            "node": "Return Final JSON",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dadata API Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dadata API Request": {
      "main": [
        [
          {
            "node": "IF Dadata Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Dadata Success": {
      "main": [
        [
          {
            "node": "Log Dadata Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Error Dadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Dadata Success": {
      "main": [
        [
          {
            "node": "Parse Dadata Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error Dadata": {
      "main": [
        [
          {
            "node": "Return Final JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Dadata Response": {
      "main": [
        [
          {
            "node": "Fedresurs API Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fedresurs API Request": {
      "main": [
        [
          {
            "node": "IF Fedresurs Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Fedresurs Success": {
      "main": [
        [
          {
            "node": "Log Fedresurs Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Error Fedresurs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Fedresurs Success": {
      "main": [
        [
          {
            "node": "Parse Fedresurs Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error Fedresurs": {
      "main": [
        [
          {
            "node": "Return Final JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Fedresurs Response": {
      "main": [
        [
          {
            "node": "Wait Before KAD (Random)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Before KAD (Random)": {
      "main": [
        [
          {
            "node": "Rotate User-Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rotate User-Agent": {
      "main": [
        [
          {
            "node": "KAD GraphQL Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "KAD GraphQL Request": {
      "main": [
        [
          {
            "node": "IF KAD Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF KAD Success": {
      "main": [
        [
          {
            "node": "Log KAD Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Error KAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log KAD Success": {
      "main": [
        [
          {
            "node": "Parse KAD Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error KAD": {
      "main": [
        [
          {
            "node": "Return Final JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse KAD Response": {
      "main": [
        [
          {
            "node": "Calculate Risk Level",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Risk Level": {
      "main": [
        [
          {
            "node": "Return Final JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Final JSON": {
      "main": [
        [
          {
            "node": "Update Cache",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Cache": {
      "main": [
        []
      ]
    },
    "Log Final Response": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "v5"
}